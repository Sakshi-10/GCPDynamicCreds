By gcloud ADC 
Authorize using cred file
https://cloud.google.com/sdk/docs/authorizing

Application Default Credentials
https://cloud.google.com/docs/authentication/application-default-credentials#GAC

snasha ~/Desktop
$  gcloud auth application-default login
Your browser has been opened to visit:

    https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A8085%2F&scope=openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%32Fwww.googleapis.com%2Fauth%2Fcloud-platform+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fsqlservice.login&state=sHi9ksONOVyWYMU44pddejzFZu1UOd&access_type=offline&code_challenge=JfANkk7IEvRopYeA&code_challenge_method=S256

Credentials saved to file: [C:\Users\snasha\AppData\Roaming\gcloud\application_default_credentials.json]

These credentials will be used by any library that requests Application Default Credentials (ADC).

Quota project "Sakshi-proj" was added to ADC which can be used by Google client libraries for billing and quota. Note that some services may still bill the project owning the resource.


snasha ~/AppData/Roaming/gcloud
$ pwd
/c/Users/snasha/AppData/Roaming/gcloud

snasha ~/AppData/Roaming/gcloud
$ cat application_default_credentials.json
{
  "account": "",
  "client_id": "********************************.apps.googleusercontent.com",
  "client_secret": "***************************",
  "quota_project_id": "Sakshi-proj",
  "refresh_token": "***************************-***************************-***************************",
  "type": "authorized_user",
  "universe_domain": "googleapis.com"
}


snasha ~/AppData/Roaming/gcloud
$ gcloud info
Google Cloud SDK [472.0.0]


Account: [sakshi.nasha@gmail.com]
Project: [sakshi-proj]
Universe Domain: [googleapis.com]


snasha ~/AppData/Roaming/gcloud
$ curl --location --request POST 'https://oauth2.googleapis.com/token' \
--header 'Content-Type: application/json' \
--data-raw '{
        "client_id": "********************************.apps.googleusercontent.com",
        "client_secret": "***************************",
        "refresh_token": "***************************-***************************-***************************",
    "grant_type": "refresh_token"
}'
{
  "access_token": "*************************************************************************************************************************",
  "expires_in": 3599,
  "scope": "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/sqlservice.login https://www.googleapis.com/auth/cloud-platform openid",
  "token_type": "Bearer",
  "id_token
}


snasha ~/AppData/Roaming/gcloud
$ TOKEN="*********************************************************"

snasha ~/AppData/Roaming/gcloud
$ echo $TOKEN
******************************************************************

snasha ~/Desktop
$ cat access.json
{
  "accessBoundary" : {
      "accessBoundaryRules" : [
        {
          "availableResource" : "//storage.googleapis.com/projects/_/buckets/tempbucket",
          "availablePermissions": ["inRole:roles/storage.objectViewer"]
        }
      ]
  }
}

snasha ~/Desktop
$ NEW_TOKEN_1=`curl -s -H "Content-Type:application/x-www-form-urlencoded" -X POST https://sts.googleapis.com/v1/token -d 'grant_type=urn:ietf:params:oauth:grant-type:token-exchange&subject_token_type=urn:ietf:params:oauth:token-type:access_token&requested_token_type=urn:ietf:params:oauth:token-type:access_token&subject_token='$TOKEN --data-urlencode "options=$(cat access.json)" | jq -r '.access_token'`

snasha ~/Desktop
$ echo $NEW_TOKEN_1
******************************************************************


snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $TOKEN"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/bucket123456/o    
200

snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $TOKEN"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/tempbucket/o       
200

snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $NEW_TOKEN_1"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/tempbucket/o
200

snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $NEW_TOKEN_1"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/bucket123456/o
403


after an hour  = 3599 = 3600 = 1 hr = 60 mins = 1 min = 60 secs = 1 hr = 3600 secs

snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $TOKEN"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/tempbucket/o
401

snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $TOKEN"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/bucket123456/o     
401

snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $NEW_TOKEN_1"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/tempbucket/o
401

snasha ~/Desktop
$ curl -s -H "Authorization: Bearer $NEW_TOKEN_1"  -o /dev/null  -w "%{http_code}\n" https://storage.googleapis.com/storage/v1/b/bucket123456/o
401
